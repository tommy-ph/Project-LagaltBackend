// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_LagaltBackend.Data;

#nullable disable

namespace Project_LagaltBackend.Migrations
{
    [DbContext(typeof(LagaltDbContext))]
    [Migration("20230412131425_InitBdLagalt")]
    partial class InitBdLagalt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ProjectSkills", (string)null);
                });

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.Property<int>("ApplicantsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectUser");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Hello everyone!",
                            ProjectId = 1,
                            Room = "Project A",
                            Sender = "JohnDoe",
                            Timestamp = "2023-04-12 13:14:25",
                            Type = "Chat",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Collabrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectCollabrators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            Status = "Pending",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 2,
                            Status = "Accepted",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionType = "Clicked",
                            ProjectId = 1,
                            Timestamp = "2023-04-12 13:14:25",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionType = "Clicked",
                            ProjectId = 2,
                            Timestamp = "2023-04-12 13:14:25",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ProjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "JohnDoe has joined the project.",
                            ProjectId = 1,
                            SenderId = 1,
                            Timestamp = "2023-04-12 13:14:25",
                            Type = "Join"
                        },
                        new
                        {
                            Id = 2,
                            Content = "JaneDoe has joined the project.",
                            ProjectId = 2,
                            SenderId = 2,
                            Timestamp = "2023-04-12 13:14:25",
                            Type = "Join"
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Image")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Progress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Web Application",
                            Description = "This is project 1",
                            Image = "Pict1",
                            Link = "https://github.com/project1",
                            Progress = "Founding",
                            Title = "Project 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Mobile Application",
                            Description = "This is project 2",
                            Image = "Pict2",
                            Progress = "InProgress",
                            Title = "Project 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Skill", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SkillName = "C#"
                        },
                        new
                        {
                            Id = 2,
                            SkillName = "JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            SkillName = "Python"
                        },
                        new
                        {
                            Id = 4,
                            SkillName = "JavaScript"
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Tag", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("TagType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            TagType = "Software",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 2,
                            TagType = "Design",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsProfileHidden")
                        .HasColumnType("bit");

                    b.Property<string>("KeycloakId")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "I'm user 1",
                            IsProfileHidden = false,
                            KeycloakId = "keycloak1",
                            Picture = "Pict1.png",
                            Status = "Junior Dep1",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "I'm user 2",
                            IsProfileHidden = false,
                            KeycloakId = "keycloak2",
                            Picture = "Pict2.png",
                            Status = "Junior Dep2",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "I'm user 3",
                            IsProfileHidden = true,
                            KeycloakId = "keycloak3",
                            Picture = "Pict3.png",
                            Status = "Junior Dep3",
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("UserSkill", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills", (string)null);
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.User", null)
                        .WithMany()
                        .HasForeignKey("ApplicantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.ChatMessage", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", "Project")
                        .WithMany("ChatMessages")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.User", "User")
                        .WithMany("ChatMessages")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Collabrator", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", "Project")
                        .WithMany("Collabrators")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.User", "User")
                        .WithMany("ProjectApplications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.History", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Project_LagaltBackend.Models.Main.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Message", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", "Project")
                        .WithMany("Messages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Project", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Tag", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Project", "Project")
                        .WithMany("ProjectTags")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserSkill", b =>
                {
                    b.HasOne("Project_LagaltBackend.Models.Main.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_LagaltBackend.Models.Main.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.Project", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("Collabrators");

                    b.Navigation("Messages");

                    b.Navigation("ProjectTags");
                });

            modelBuilder.Entity("Project_LagaltBackend.Models.Main.User", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("Messages");

                    b.Navigation("ProjectApplications");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
